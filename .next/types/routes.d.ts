// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/cadastro-usuarios" | "/cadastros/eventos" | "/login" | "/relatorios" | "/relatorios/[id]" | "/relatorios/[id]/editar" | "/relatorios/evidencias" | "/relatorios/evidencias-registros" | "/relatorios/evidencias-revitalizacoes" | "/relatorios/evidencias-rotineiros" | "/relatorios/novo" | "/relatorios/novo-dds" | "/relatorios/novo-ecopontos" | "/relatorios/novo-eventos" | "/relatorios/novo-feiras" | "/relatorios/novo-monumentos" | "/relatorios/novo-registro" | "/relatorios/novo-revitalizacao" | "/relatorios/novo-rotineiros" | "/relatorios/novo-rotineiros-lote" | "/relatorios/novo-varricao-mecanizada" | "/upload"
type AppRouteHandlerRoutes = "/api/export-evidencias-mutiroes" | "/api/export-evidencias-revitalizacoes" | "/api/export-evidencias-rotineiros" | "/api/generate-pdf" | "/api/test-pdf"
type PageRoutes = never
type LayoutRoutes = "/"
type RedirectRoutes = never
type RewriteRoutes = never
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/api/export-evidencias-mutiroes": {}
  "/api/export-evidencias-revitalizacoes": {}
  "/api/export-evidencias-rotineiros": {}
  "/api/generate-pdf": {}
  "/api/test-pdf": {}
  "/cadastro-usuarios": {}
  "/cadastros/eventos": {}
  "/login": {}
  "/relatorios": {}
  "/relatorios/[id]": { "id": string; }
  "/relatorios/[id]/editar": { "id": string; }
  "/relatorios/evidencias": {}
  "/relatorios/evidencias-registros": {}
  "/relatorios/evidencias-revitalizacoes": {}
  "/relatorios/evidencias-rotineiros": {}
  "/relatorios/novo": {}
  "/relatorios/novo-dds": {}
  "/relatorios/novo-ecopontos": {}
  "/relatorios/novo-eventos": {}
  "/relatorios/novo-feiras": {}
  "/relatorios/novo-monumentos": {}
  "/relatorios/novo-registro": {}
  "/relatorios/novo-revitalizacao": {}
  "/relatorios/novo-rotineiros": {}
  "/relatorios/novo-rotineiros-lote": {}
  "/relatorios/novo-varricao-mecanizada": {}
  "/upload": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
