#!/bin/bash

# üöÄ Script de Deploy para Vercel
# Sistema de Relat√≥rios Limpebras

echo "üöÄ Iniciando deploy para Vercel..."

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Fun√ß√£o para log colorido
log() {
    echo -e "${BLUE}[$(date +'%H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}‚ùå ERRO:${NC} $1"
    exit 1
}

success() {
    echo -e "${GREEN}‚úÖ SUCESSO:${NC} $1"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  AVISO:${NC} $1"
}

# 1. Verificar se estamos no diret√≥rio correto
if [ ! -f "package.json" ]; then
    error "Execute este script no diret√≥rio raiz do projeto"
fi

log "Verificando depend√™ncias..."

# 2. Instalar depend√™ncias
if ! npm install; then
    error "Falha ao instalar depend√™ncias"
fi

success "Depend√™ncias instaladas"

# 3. Executar lint
log "Executando verifica√ß√£o de c√≥digo..."
if ! npm run lint; then
    warning "Problemas encontrados no lint. Continuando..."
fi

# 4. Build do projeto
log "Executando build..."
if ! npm run build; then
    error "Falha no build. Verifique os erros acima."
fi

success "Build conclu√≠do com sucesso"

# 5. Verificar se git est√° configurado
log "Verificando configura√ß√£o do Git..."
if [ ! -d ".git" ]; then
    warning "Git n√£o inicializado. Inicializando..."
    git init
    git add .
    git commit -m "Initial commit: Sistema de Relat√≥rios LimpaSP"
fi

# 6. Verificar status do git
if [ -n "$(git status --porcelain)" ]; then
    log "Committing mudan√ßas..."
    git add .
    git commit -m "Deploy: $(date +'%Y-%m-%d %H:%M:%S')"
fi

# 7. Push para GitHub (se remote configurado)
if git remote get-url origin > /dev/null 2>&1; then
    log "Fazendo push para GitHub..."
    if ! git push origin main; then
        warning "Falha no push para GitHub. Verifique a configura√ß√£o do remote."
    else
        success "Push para GitHub conclu√≠do"
    fi
else
    warning "Remote 'origin' n√£o configurado. Configure com:"
    echo "git remote add origin https://github.com/SEU_USUARIO/relatorios-limpaSP.git"
fi

# 8. Verificar se Vercel CLI est√° instalado
if command -v vercel &> /dev/null; then
    log "Vercel CLI encontrado. Fazendo deploy..."
    
    # Login se necess√°rio
    if ! vercel whoami &> /dev/null; then
        warning "N√£o logado na Vercel. Fa√ßa login:"
        echo "vercel login"
    else
        # Deploy
        if vercel --prod; then
            success "Deploy para Vercel conclu√≠do!"
        else
            error "Falha no deploy para Vercel"
        fi
    fi
else
    warning "Vercel CLI n√£o instalado. Instale com:"
    echo "npm i -g vercel"
    echo ""
    echo "Ou use a interface web: https://vercel.com"
fi

# 9. Informa√ß√µes finais
echo ""
echo "üéâ Deploy conclu√≠do!"
echo ""
echo "üìã Pr√≥ximos passos:"
echo "1. Acesse https://vercel.com/dashboard"
echo "2. Verifique se o projeto foi deployado"
echo "3. Teste a aplica√ß√£o na URL fornecida"
echo ""
echo "‚ö†Ô∏è  LEMBRE-SE:"
echo "- IndexedDB funciona apenas no navegador do usu√°rio"
echo "- Dados n√£o persistem entre atualiza√ß√µes da aplica√ß√£o"
echo "- Para produ√ß√£o real, considere implementar um backend"
echo ""
echo "üîó Links √∫teis:"
echo "- Vercel Dashboard: https://vercel.com/dashboard"
echo "- Documenta√ß√£o: https://vercel.com/docs"
echo "- Suporte: https://vercel.com/help"
